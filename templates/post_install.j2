#!/bin/bash

#
# Generated by ansible-ddg
#
# This post install script bridges control to
# userland from centralized automation.
#

#echo "eval $(perl -I${HOME}/perl5/lib/perl5 -Mlocal::lib)" >> ~/.bashrc

#
# Environment
# -----------
USER_HOME=/home/{{sdk_user}}
source $USER_HOME/.bashrc


#
# Helpers
# -------
# f(x) runner
function run() {
  local cmdList=("$@")
  local cmd=""

  for cmd in "${cmdList[@]}" ; do
      echo "Running $cmd"
      $cmd
      local rc=$?
      if [ $rc -gt 0 ]; then
        echo "Function [$cmd] failed with return code [$rc]"
        return $rc;
      fi
  done

  echo "[$cmd] exited successfully."
  return 0;
}

info() {
  echo "User: [$(whoami)]"
  # pushd $USER_HOME
  echo "Working directory [$(pwd)]"
  echo "Environment: $(env)"
}

#
# Perl & Perlbrew
# ---------------
doPerl() {
  local pbPath=$USER_HOME/perl5/perlbrew/etc/bashrc
  if [ ! -e $pbPath ]; then
    echo "Can't find perlbrew profile script to source."
    return 1;
  fi;
  
  source $pbPath

  perlVersion() {
    # Perl version
    perl -v
  }

  findPerlbrew() {
    # Identify perlbrew
    which perlbrew
  }

  upgradePerlbrew() {
    perlbrew version
    
    # Upgrade
    perlbrew -v self-upgrade
  }

  installPerl() {
    # Install and use Perl 5.16
    perlbrew install perl-5.16.3
    perlbrew switch perl-5.16.3
  }

  local commands=(perlVersion findPerlbrew upgradePerlbrew installPerl)
  run "${commands[@]}"
}

main() {
  testPerl() {
    $USER_HOME/duckpan_test.pl
  }

  installDuckpan() {
    $USER_HOME/duckpan-install.pl
  }

  local commands=(info doPerl testPerl installDuckpan)
  run "${commands[@]}"
}

main
